JFDML JFormDesigner: "8.2.4.0.393" Java: "21.0.6" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
			"$horizontalGroup": "par l {seq l {space :::p, par l {comp jPanel3:::::x, comp jPanel5::t:::x, seq {par l {comp jPanel4:::p::p, comp panel1:::p::p}, space :0:20:x}, comp modernSearchTitlePanel::l:::x}, space :::p}}"
			"$verticalGroup": "par l {seq l {space :::p, comp jPanel5:::p::p, space :::p, comp jPanel3:::p::p, space :::p, comp jPanel4:::p::p, space :::p, comp panel1:::p::p, space :::p, comp modernSearchTitlePanel::::122:x, space :::p}}"
		} ) {
			name: "this"
			"maximumSize": new java.awt.Dimension( 10, 10 )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
				"$layoutConstraints": "insets 0,hidemode 3,gap 5 5"
				"$columnConstraints": "[fill][fill][fill]"
				"$rowConstraints": "[][fill]"
			} ) {
				name: "jPanel5"
				"border": new javax.swing.border.TitledBorder( "Tab-Verhalten" )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxTabsTop"
					"text": "Tabs oben anzeigen"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 0"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxTabIcon"
					"text": "Icons anzeigen"
					"toolTipText": "Im Tab keine Icons anzeigen"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 1 0"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbAutomaticMenuTabSwitching"
					"text": "Tabs schalten automatisch bei Menünutzung um"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 2 0"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbRestoreSelectedTab"
					"text": "Letzte Auswahl beim Start wiederherstellen"
					"toolTipText": "Wenn gewählt wird beim Start des Programms automatisch das zuletzt genutzte Tab aktiviert."
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 1 3 1"
				} )
			} )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
				"$horizontalGroup": "par l {seq {space :5:5:p, comp jLabel3:::p::p, space :5:5:p, comp jtfUserAgent:::p::p, space :::x}}"
				"$verticalGroup": "par l {seq {space :10:10:p, comp jLabel3:::p::p}, seq {space :5:5:p, comp jtfUserAgent:::p::p}}"
			} ) {
				name: "jPanel3"
				"border": new javax.swing.border.TitledBorder( "Download" )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "jLabel3"
					"text": "User-Agent:"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "jtfUserAgent"
					"minimumSize": new java.awt.Dimension( 200, 26 )
					"preferredSize": new java.awt.Dimension( 520, 26 )
				} )
			} )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
				"$horizontalGroup": "par l {seq {space :::p, par l:::p {seq l {comp jLabel4:::p::p, space :::p, comp jtfProxyHost:::p:250:p}, seq l {comp jLabel7:::p::p, space :::p, comp jtfProxyUser:::::x}}, space u:::p, par t {comp jLabel8:::p::p, comp jLabel5:::p::p}, space :::p, par l {seq {comp jtfProxyPort:::p:72:p, space :0:187:x}, comp jpfProxyPassword:::::x}, space :::p}}"
				"$verticalGroup": "par l {seq l {space :::p, par b {comp jLabel4::b:p::p, comp jtfProxyHost::b:p::p, comp jLabel5::b:p::p, comp jtfProxyPort::b:p::p}, space :::p, par b {comp jLabel7::b:p::p, comp jtfProxyUser::b:p::p, comp jLabel8::b:p::p, comp jpfProxyPassword::b:p::p}, space :::x}}"
			} ) {
				name: "jPanel4"
				"border": new javax.swing.border.TitledBorder( "HTTP-Proxy (Neustart erforderlich!)" )
				"toolTipText": ""
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "jLabel4"
					"text": "Host:"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "jtfProxyHost"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "jLabel5"
					"text": "Port:"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "jtfProxyPort"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "jLabel7"
					"text": "User:"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
				} )
				add( new FormComponent( "javax.swing.JTextField" ) {
					name: "jtfProxyUser"
				} )
				add( new FormComponent( "javax.swing.JLabel" ) {
					name: "jLabel8"
					"text": "Passwort:"
					auxiliary() {
						"JavaCodeGenerator.variableLocal": true
					}
				} )
				add( new FormComponent( "javax.swing.JPasswordField" ) {
					name: "jpfProxyPassword"
				} )
			} )
			add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class net.miginfocom.swing.MigLayout ) {
				"$layoutConstraints": "insets 0,hidemode 3,gap 5 0"
				"$columnConstraints": "[grow,left][fill]"
				"$rowConstraints": "[fill][fill][fill][][fill]"
			} ) {
				name: "panel1"
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "jCheckBoxTray"
					"text": "Programm ins Tray minimieren"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 0"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbShowBlacklistIconWithText"
					"text": "Blacklist-Filter-Icon mit Text anzeigen"
					"toolTipText": "Neustart erforderlich"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 1 0"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbUseWikipediaSenderLogos"
					"text": "Senderlogos von Wikipedia verwenden"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 1"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbAutomaticUpdateChecks"
					"text": "Programmupdates täglich suchen"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 2"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "cbDrawListIconsRight"
					"text": "Info-Icons der Listen rechts darstellen"
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 3"
				} )
				add( new FormComponent( "javax.swing.JCheckBox" ) {
					name: "checkBox1"
					"text": "Erscheinungsbild des Betriebssystem verwenden"
					"toolTipText": "Stellt den Hell-/Dunkelmodus der App beim Programmstart nach den aktuellen Einstellungen des Betriebssystem ein."
					auxiliary() {
						"JavaCodeGenerator.variableName": "cbUseSystemDarkMode"
					}
				}, new FormLayoutConstraints( class net.miginfocom.layout.CC ) {
					"value": "cell 0 4 2 1"
				} )
			} )
			add( new FormComponent( "org.jdesktop.swingx.JXTitledPanel" ) {
				name: "modernSearchTitlePanel"
				"title": "Moderne Suche"
			} )
		}, new FormLayoutConstraints( null ) {
			"size": new java.awt.Dimension( 680, 470 )
			"location": new java.awt.Point( 0, 0 )
		} )
	}
}

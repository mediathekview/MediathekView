<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.mediathekview</groupId>
    <artifactId>MediathekView</artifactId>
    <version>14.4.0</version>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>MediathekView Desktop Client</description>
    <url>https://www.mediathekview.de/</url>

    <licenses>
        <license>
            <name>GNU General Public License (GPL) version 3.0</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>Nicklas2751</id>
            <name>Nicklas Wiegandt</name>
            <email>nicklas@mediathekview.de</email>
        </developer>
        <developer>
            <id>derreisende77</id>
            <name>Christian F.</name>
            <url>https://github.com/derreisende77</url>
        </developer>
        <developer>
            <id>pidoubleyou</id>
            <name>Peter W.</name>
            <url>https://github.com/pidoubleyou</url>
        </developer>
        <developer>
            <id>TheSasch</id>
            <name>Sascha Wiegandt</name>
            <url>https://github.com/thesasch</url>
        </developer>
        <developer>
            <id>alex1702</id>
            <name>Alexander Finkh√§user</name>
            <url>https://github.com/alex1702</url>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git://github.com/mediathekview/MLib.git</connection>
        <developerConnection>scm:git:ssh://github.com:mediathekview/MLib.git</developerConnection>
        <url>https://github.com/mediathekview/MLib/tree/master</url>
    </scm>

    <repositories>
        <repository>
            <id>local-maven-repository</id>
            <url>file:///${project.basedir}/maven-repository</url>
        </repository>

        <repository>
            <id>oss.sonatype.org-snapshot</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.language.version>24</jdk.language.version>
        <jvm.target.version>24</jvm.target.version>
        <kotlin.language.target>23</kotlin.language.target>

        <kotlin.version>2.1.21</kotlin.version>
        <kotlin.compiler.incremental>false</kotlin.compiler.incremental>

        <maven.compiler.source>${jdk.language.version}</maven.compiler.source>
        <maven.compiler.target>${jvm.target.version}</maven.compiler.target>

        <annotations.version>24.1.0</annotations.version>
        <commons-configuration2.version>2.11.0</commons-configuration2.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-lang3.version>3.17.0</commons-lang3.version>
        <flatlaf.version>3.6</flatlaf.version>
        <glazedlists.version>1.11.0</glazedlists.version>
        <guava.version>33.4.8-jre</guava.version>
        <icu4j.version>76.1</icu4j.version>
        <ikonli.version>12.4.0</ikonli.version>
        <jackson.version>2.18.0</jackson.version>
        <jaffree.version>2024.08.29</jaffree.version>
        <javax-activation.version>1.2.0</javax-activation.version>
        <javax.transaction-api.version>1.3</javax.transaction-api.version>
        <jfreechart.version>1.5.5</jfreechart.version>
        <jide-oss.version>3.7.15</jide-oss.version>
        <jlibnotify.version>1.2.1</jlibnotify.version>
        <jna.version>5.17.0</jna.version>
        <junit.jupiter.version>5.10.3</junit.jupiter.version>
        <lucene.version>10.2.0</lucene.version>
        <lgooddatepicker.version>11.2.1</lgooddatepicker.version>
        <log4j2.version>2.24.3</log4j2.version>
        <maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
        <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <mbassador.version>1.3.2</mbassador.version>
        <miglayout.version>11.3</miglayout.version>
        <mockito.version>5.12.0</mockito.version>
        <okhttp.version>5.0.0-alpha.14</okhttp.version>
        <picocli.version>4.7.7</picocli.version>
        <sqlite-jdbc.version>3.50.1.0</sqlite-jdbc.version>
        <swingx.version>1.6.5-1</swingx.version>
        <xz.version>1.10</xz.version>

        <mainclass>mediathek.Main</mainclass>

        <install4j.version>11.0.4</install4j.version>
        <install4j.home>./install4j${install4j.version}</install4j.home>
        <!--suppress UnresolvedMavenProperty -->
        <install4j.license>${env.LICENSE_KEY_11}</install4j.license>
        <install4j.jdk.min-version>24</install4j.jdk.min-version>

        <!-- @formatter:off -->
        <!-- VM Parameters Windows x64 and aarch64 -->
        <install4j.vmparameters.win.64>-XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=compact -XX:MaxRAMPercentage=50.0 -XX:+UseStringDeduplication --enable-native-access=ALL-UNNAMED --add-modules jdk.incubator.vector --add-exports=java.desktop/sun.swing=ALL-UNNAMED -DexternalUpdateCheck</install4j.vmparameters.win.64>
        <!-- VM Parameters Linux 64bit Intel and ARM -->
        <install4j.vmparameters.linux.64>-XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=compact -XX:MaxRAMPercentage=50.0 -XX:+UseStringDeduplication --enable-native-access=ALL-UNNAMED --add-modules jdk.incubator.vector --add-exports=java.desktop/sun.swing=ALL-UNNAMED --add-opens java.desktop/sun.awt.X11=ALL-UNNAMED -DexternalUpdateCheck</install4j.vmparameters.linux.64>
        <!-- @formatter:on -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-swing</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome6-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-materialdesign2-pack</artifactId>
            <version>${ikonli.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>${icu4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.lgooddatepicker</groupId>
            <artifactId>LGoodDatePicker</artifactId>
            <version>${lgooddatepicker.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analysis-common</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
            <version>${lucene.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>${jfreechart.version}</version>
        </dependency>

        <dependency>
            <groupId>org.swinglabs.swingx</groupId>
            <artifactId>swingx-all</artifactId>
            <version>${swingx.version}</version>
        </dependency>

        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-extras</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-swingx</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>flatlaf-jide-oss</artifactId>
            <version>${flatlaf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.formdev</groupId>
            <artifactId>jide-oss</artifactId>
            <version>${jide-oss.version}</version>
        </dependency>

        <dependency>
            <groupId>es.blackleg</groupId>
            <artifactId>jlibnotify</artifactId>
            <version>${jlibnotify.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.java.dev.jna</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Updated JNA for jlibnotify -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-jpms</artifactId>
            <version>${jna.version}</version>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform-jpms</artifactId>
            <version>${jna.version}</version>
        </dependency>

        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite-jdbc.version}</version>
        </dependency>

        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
            <version>${javax-activation.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>javax.transaction-api</artifactId>
            <version>${javax.transaction-api.version}</version>
        </dependency>

        <!-- Apache Commons Lang f√ºr Utils -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
            <version>${commons-configuration2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.tukaani</groupId>
            <artifactId>xz</artifactId>
            <version>${xz.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- for Bookmark JSON reading and writing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-core</artifactId>
            <version>${miglayout.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-swing</artifactId>
            <version>${miglayout.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.openjfx</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.github.jiconfont</groupId>
            <artifactId>jiconfont-font_awesome</artifactId>
            <version>4.7.0.1</version>
        </dependency>

        <dependency>
            <groupId>net.engio</groupId>
            <artifactId>mbassador</artifactId>
            <version>${mbassador.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jetbrains</groupId>
                    <artifactId>annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>${okhttp.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.glazedlists</groupId>
            <artifactId>glazedlists</artifactId>
            <version>${glazedlists.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <!-- for TimedTextMarkupParserTest -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.19.0</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit 5 Jupiter -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>airsquared</groupId>
            <artifactId>JMacNotification</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.kokorin.jaffree</groupId>
            <artifactId>jaffree</artifactId>
            <version>${jaffree.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>MediathekView</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${jdk.language.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>-XX:+EnableDynamicAgentLoading -Xshare:off --enable-native-access=ALL-UNNAMED</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <source>src/main/kotlin</source>
                                <source>target/generated-sources/annotations</source>
                            </sourceDirs>
                            <jvmTarget>${kotlin.language.target}</jvmTarget>
                        </configuration>
                    </execution>
                    <execution>
                        <id>kotlin-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                            </sourceDirs>
                            <jvmTarget>${kotlin.language.target}</jvmTarget>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${jdk.language.version}</jvmTarget>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${jvm.target.version}</release>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <compilerArgs>
                        <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>${picocli.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <source>${jdk.language.version}</source>
                    <target>${jdk.language.version}</target>
                </configuration>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass><![CDATA[${mainclass}]]></mainClass>
                            <classpathPrefix>dependency/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/res</outputDirectory>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>exe</nonFilteredFileExtension>
                                <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                            <resources>
                                <resource>
                                    <directory>res</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/ffmpeg*</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-install4j-installers</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>.install4j</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- configure the plugin here -->
                            <excludeArtifactIds>
                                sqlite-jdbc,mockito-core,mockito-junit-jupiter,junit-jupiter-api,junit-jupiter-params,junit-jupiter-engine,kotlin-test-junit,byte-buddy,byte-buddy-agent,junit-platform-commons,junit-platform-engine,kotlin-test
                            </excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>windows_64bit</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <install4j.platform>windows</install4j.platform>
                <windows.ffmpeg.url>https://s3.mvorg.de/res/dev/windows/64/bin/ffmpeg_new.zip</windows.ffmpeg.url>
                <windows.ffmpeg.md5>ef173fd7a3b684c71e445702a8f510f3</windows.ffmpeg.md5>
                <windows.ffmpeg.outdir>${project.build.directory}/res</windows.ffmpeg.outdir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>fetch-unpack-clean-ffmpeg</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>powershell</executable>
                                    <arguments>
                                        <argument>-NoProfile</argument>
                                        <argument>-ExecutionPolicy</argument>
                                        <argument>Bypass</argument>
                                        <argument>-Command</argument>
                                        <argument>
                                            <![CDATA[
                      $url    = '${windows.ffmpeg.url}'
                      $md5exp = '${windows.ffmpeg.md5}'
                      $outDir = '${windows.ffmpeg.outdir}'
                      $zip    = Join-Path $outDir 'ffmpeg_new.zip'

                      # ensure output dir
                      New-Item -ItemType Directory -Path $outDir -Force | Out-Null

                      Write-Host "‚Üí Downloading $url"
                      # use native curl.exe for a console progress bar
                      curl.exe -L $url -o $zip --progress-bar

                      # verify checksum
                      $md5got = (Get-FileHash -Algorithm MD5 -Path $zip).Hash.ToLower()
                      if ($md5got -ne $md5exp) {
                        throw "MD5 mismatch: expected $md5exp, got $md5got"
                      }

                      Write-Host "‚Üí Unpacking $zip ‚Üí $outDir"
                      Expand-Archive -Path $zip -DestinationPath $outDir -Force

                      Write-Host "‚Üí Deleting $zip"
                      Remove-Item -Path $zip -Force
                    ]]>
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>rename-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>rename</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>${project.build.directory}/res/ffmpeg/</sourceFile>
                                    <destinationFile>${project.build.directory}/res/bin/</destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/**</exclude>
                                                <exclude>**/native/Windows/aarch64/**</exclude>
                                                <exclude>**/native/Windows/armv7/**</exclude>
                                                <exclude>**/native/Windows/x86/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-install4j-win-amd64-installers</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/installers/windows-amd64</directory>
                                            <targetPath>${basedir}/target</targetPath>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install4j-win-amd64</id>
            <properties>
                <install4j.home>download\install4j</install4j.home>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.license>${env.INSTALL4J_11_LICENSE_KEY}</install4j.license>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <version>${install4j.version}</version>
                        <executions>
                            <execution>
                                <id>compile-installer-win-amd64</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <projectFile>
                                        ${project.build.directory}/mediathekview-windows-amd64.install4j
                                    </projectFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>windows-aarch64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <windows.ffmpeg.url>https://s3.mvorg.de/res/dev/windows/aarch64/ffmpeg.zip</windows.ffmpeg.url>
                <windows.ffmpeg.md5>3812b8f3c99cf33278dad42a79bff973</windows.ffmpeg.md5>
                <windows.bin.dir>${project.build.directory}/res/bin</windows.bin.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>fetch-and-unpack-ffmpeg</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>powershell</executable>
                                    <arguments>
                                        <argument>-NoProfile</argument>
                                        <argument>-ExecutionPolicy</argument>
                                        <argument>Bypass</argument>
                                        <argument>-Command</argument>
                                        <argument>
                                            <![CDATA[
              $url    = '${windows.ffmpeg.url}'
              $md5exp = '${windows.ffmpeg.md5}'
              $outDir = '${windows.bin.dir}'
              $zip    = Join-Path $outDir 'ffmpeg.zip'

              # ensure output dir exists
              New-Item -ItemType Directory -Path $outDir -Force | Out-Null

              Write-Host "‚Üí Downloading $url"
              # use Windows-native curl.exe for a console progress bar
              curl.exe -L $url -o $zip --progress-bar

              # verify checksum
              $md5got = (Get-FileHash -Algorithm MD5 -Path $zip).Hash.ToLower()
              if ($md5got -ne $md5exp) {
                throw "MD5 mismatch: expected $md5exp, got $md5got"
              }

              Write-Host "‚Üí Unpacking $zip ‚Üí $outDir"
              Expand-Archive -Path $zip -DestinationPath $outDir -Force

              Write-Host "‚Üí Deleting $zip"
              Remove-Item -Path $zip -Force
            ]]>
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/**</exclude>
                                                <exclude>**/native/Windows/armv7/**</exclude>
                                                <exclude>**/native/Windows/x86/**</exclude>
                                                <exclude>**/native/Windows/x86_64/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-install4j-win-aarch64-installers</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/installers/windows-aarch64</directory>
                                            <targetPath>${basedir}/target</targetPath>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install4j-win-aarch64</id>
            <properties>
                <install4j.home>download\install4j</install4j.home>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.license>${env.INSTALL4J_11_LICENSE_KEY}</install4j.license>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <version>${install4j.version}</version>
                        <executions>
                            <execution>
                                <id>compile-installer-win-aarch64</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <projectFile>
                                        ${project.build.directory}/mediathekview-windows-aarch64.install4j
                                    </projectFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>linux_64bit</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <install4j.platform>linux</install4j.platform>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>rename-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>${project.basedir}/scripte/aria2-remote.sh</sourceFile>
                                    <destinationFile>${project.build.directory}/res/bin/aria2-remote.sh
                                    </destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/**</exclude>
                                                <exclude>**/native/Windows/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux_arm_64bit</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <install4j.platform>arm</install4j.platform>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.coderplus.maven.plugins</groupId>
                        <artifactId>copy-rename-maven-plugin</artifactId>
                        <version>1.0</version>
                        <executions>
                            <execution>
                                <id>rename-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <sourceFile>${project.basedir}/scripte/aria2-remote.sh</sourceFile>
                                    <destinationFile>${project.build.directory}/res/bin/aria2-remote.sh
                                    </destinationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/**</exclude>
                                                <exclude>**/native/Windows/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>mac_intel</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <binaries.base>https://s3.mvorg.de/res/dev/mac/bin</binaries.base>
                <bin.dir>${project.build.directory}/bin</bin.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>download-mac-intel-binaries</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-lc</argument>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <argument>
                                            <![CDATA[
                set -e
                mkdir -p "${bin.dir}"
                for pair in \
                  "common/mv_shutdown_helper:3c8254ce318ef41da00517199c5a5e85" \
                  "intel/ffmpeg:438891fe3a1077081aa400c1df18590c" \
                  "intel/ffprobe:5226b0b358243c5757108e107dc546bf"
                do
                  IFS=":" read -r path md5 <<< "$pair"
                  url="${binaries.base}/${path}"
                  dest="${bin.dir}/$(basename "$path")"
                  echo "‚Üí Downloading $url"
                  curl -fL "$url" -o "$dest"
                  actual=$(md5 -q "$dest")
                  if [[ "$actual" != "$md5" ]]; then
                    echo "!! MD5 mismatch for $dest (got $actual, expected $md5)" >&2
                    exit 1
                  fi
                done
                ]]>
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/aarch64/**</exclude>
                                                <exclude>**/native/Windows/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-install4j-mac-installers</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/installers/mac</directory>
                                            <targetPath>${basedir}/target/mac</targetPath>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mac_apple_silicon</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <binaries.base>https://s3.mvorg.de/res/dev/mac/bin</binaries.base>
                <bin.dir>${project.build.directory}/bin</bin.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>download-mac-apple-silicon-binaries</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>-lc</argument>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <argument>
                                            <![CDATA[
set -e
mkdir -p "${bin.dir}"
for pair in \
  "common/mv_shutdown_helper:3c8254ce318ef41da00517199c5a5e85" \
  "apple_silicon/ffmpeg:59529684989790fb73c956f813c9be13" \
  "apple_silicon/ffprobe:cca2b80ca82a1fd6f96763ba2ecbe691"
do
  IFS=":" read -r path md5 <<< "$pair"
  url="${binaries.base}/${path}"
  dest="${bin.dir}/$(basename "$path")"

  # if file exists and checksum matches, skip download
  if [[ -f "$dest" && "$(md5 -q "$dest")" == "$md5" ]]; then
    echo "‚Üí Using cached $dest"
  else
    echo "‚Üí Downloading $url"
    curl -fL "$url" -o "$dest"
    actual=$(md5 -q "$dest")
    if [[ "$actual" != "$md5" ]]; then
      echo "!! MD5 mismatch for $dest (got $actual, expected $md5)" >&2
      exit 1
    fi
  fi
done
]]>
                                        </argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>shade-sqlite</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <includes>
                                            <include>org.xerial:sqlite-jdbc</include>
                                        </includes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.xerial:sqlite-jdbc</artifact>
                                            <excludes>
                                                <exclude>**/native/FreeBSD/**</exclude>
                                                <exclude>**/native/Linux/**</exclude>
                                                <exclude>**/native/Linux-Android/**</exclude>
                                                <exclude>**/native/Linux-Musl/**</exclude>
                                                <exclude>**/native/Mac/x86_64/**</exclude>
                                                <exclude>**/native/Windows/**</exclude>
                                                <exclude>META-INF/MANIFEST.MF</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>copy-install4j-mac-installers</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/installers/mac</directory>
                                            <targetPath>${basedir}/target/mac</targetPath>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>install4j</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <version>${install4j.version}</version>
                        <executions>
                            <execution>
                                <id>compile-installers</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <projectFile>
                                        ${project.build.directory}/mediathekview_${install4j.platform}.install4j
                                    </projectFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install4j-mac-apple-silicon</id>
            <properties>
                <install4j.home>/Applications/install4j.app</install4j.home>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.macKeystorePassword>${env.MAC_KEYSTORE_PASSWORD}</install4j.macKeystorePassword>
                <install4j.disableNotarization>false</install4j.disableNotarization>
                <install4j.disableSigning>false</install4j.disableSigning>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.license>${env.INSTALL4J_11_LICENSE_KEY}</install4j.license>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <version>${install4j.version}</version>
                        <executions>
                            <execution>
                                <id>compile-installer-mac-apple-silicon</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <projectFile>
                                        ${project.build.directory}/mac/mac-apple-silicon.install4j
                                    </projectFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install4j-mac-intel</id>
            <properties>
                <install4j.home>/Applications/install4j.app</install4j.home>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.macKeystorePassword>${env.MAC_KEYSTORE_PASSWORD}</install4j.macKeystorePassword>
                <install4j.disableNotarization>false</install4j.disableNotarization>
                <install4j.disableSigning>false</install4j.disableSigning>
                <!--suppress UnresolvedMavenProperty -->
                <install4j.license>${env.INSTALL4J_11_LICENSE_KEY}</install4j.license>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <version>${install4j.version}</version>
                        <executions>
                            <execution>
                                <id>compile-installer-mac-intel</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <projectFile>
                                        ${project.build.directory}/mac/mac-intel.install4j
                                    </projectFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>

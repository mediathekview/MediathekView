
variables:
#  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_OPTS: "-Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

image: maven:3.9.11-eclipse-temurin-25


cache:
  paths:
    - ./.m2

default:
  tags:
    - mvrunner1
  before_script:
    - export UBUNTU_MIRROR=${UBUNTU_MIRROR:-http://mirror.hetzner.com/ubuntu}
    - sed -i "s|http://archive.ubuntu.com/ubuntu|$UBUNTU_MIRROR|g" /etc/apt/sources.list
    - apt-get update -qq
    - apt-get install -y -qq openjdk-21-jre-headless ssh lib32ncurses6 lib32z1 wget tar file gnupg2 git-lfs > /dev/null
    - source /private/ENVS
    - whoami
    - mkdir -p ~/.ssh
    - ssh-keyscan -p 60002 dw2.mvorg.de >> ~/.ssh/known_hosts
    - ssh-keyscan -p 60002 116.202.81.23 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - wget -q https://download-gcdn.ej-technologies.com/install4j/install4j_unix_11_0_4.tar.gz -O install4j.tar.gz
    - tar -zxf install4j.tar.gz
    - java -version
    - ${INSTALL4J_JAVA_HOME}/bin/java -version
    - mvn -v
    - mvn clean
    #- mvn install4j:install-license -Pinstall4j # wird nicht mehr ben√∂tigt
#    - git clone https://gitlab.com/mediathekview/mediathekview-buildres.git tmpres
#    - mv tmpres/bin res/
#    - rm -rf tmpres

stages:
  - deploy-nightly-lin
  - deploy-nightly-linarm
  - deploy-lin
  - deploy-linarm
  - deploy-win

Build and Deploy nightly Linux:
  stage: deploy-nightly-lin
  script:
    - mvn -B package -Plinux_64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh nightly
    - /skripte/deploy.sh nightly linux $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Linux ARM:
  stage: deploy-nightly-linarm
  script:
    - mvn -B package -P!linux_64bit,linux_arm_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly linux-arm64 $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy Linux:
  stage: deploy-lin
  script:
    - mvn -B package -Plinux_64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh release
    - /skripte/deploy.sh release linux
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Linux ARM:
  stage: deploy-linarm
  script:
    - mvn -B package -P!linux_64bit,linux_arm_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release linux-aarch64
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Windows:
  stage: deploy-win
  script:
    - mvn -B package -P!linux_64bit,windows_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release win
  rules:
    - if: $CI_COMMIT_TAG

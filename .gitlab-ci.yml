
variables:
#  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_OPTS: "-Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"

image: maven:3.9-eclipse-temurin-23


cache:
  paths:
    - ./.m2

default:
  tags:
    - mvrunner1
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq openjdk-21-jre-headless ssh lib32ncurses6 lib32z1 wget tar file gnupg2 git-lfs > /dev/null
    - source /private/ENVS
    - whoami
    - mkdir -p ~/.ssh
    - ssh-keyscan -p 60002 dw2.mvorg.de >> ~/.ssh/known_hosts
    - ssh-keyscan -p 60002 116.202.81.23 >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - wget -q https://download-gcdn.ej-technologies.com/install4j/install4j_unix_11_0_3.tar.gz -O install4j.tar.gz
    - tar -zxf install4j.tar.gz
    - java -version
    - ${INSTALL4J_JAVA_HOME}/bin/java -version
    - mvn -v
    - mvn clean
    #- mvn install4j:install-license -Pinstall4j # wird nicht mehr ben√∂tigt
#    - git clone https://gitlab.com/mediathekview/mediathekview-buildres.git tmpres
#    - mv tmpres/bin res/
#    - rm -rf tmpres

stages:
  - deploy-nightly-lin
  - deploy-nightly-linarm
  - deploy-nightly-win
  # - deploy-nightly-win32
  - deploy-nightly-mac
  # - deploy-nightly-mac-as
  - deploy-lin
  - deploy-linarm
  - deploy-win
  # - deploy-win32

Build and Deploy nightly Linux:
  stage: deploy-nightly-lin
  script:
    - mvn -B package -Plinux_64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh nightly
    - /skripte/deploy.sh nightly linux $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Linux ARM:
  stage: deploy-nightly-linarm
  script:
    - mvn -B package -P!linux_64bit,linux_arm_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly linux-aarch64 $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Windows:
  stage: deploy-nightly-win
  script:
    - mvn -B package -P!linux_64bit,windows_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly win $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

# Build and Deploy nightly Windows 32bit:
#   stage: deploy-nightly-win32
#   script:
#     - mvn -B package -P!linux_64bit,windows_32bit,install4j $MAVEN_CLI_OPTS
#     - /skripte/deploy.sh nightly win32 $CI_COMMIT_SHA
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

Build and Deploy nightly Mac Intel:
  stage: deploy-nightly-mac
  script:
    - mvn -B package -P!linux_64bit,mac_intel $MAVEN_CLI_OPTS
    - /skripte/deploy.sh nightly mac $CI_COMMIT_SHA
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'

# Build and Deploy nightly Mac Apple Silicon:
#   stage: deploy-nightly-mac-as
#   script:
#     - mvn -B package -P!linux_64bit,mac_apple_silicon $MAVEN_CLI_OPTS
#     - /skripte/deploy.sh nightly mac $CI_COMMIT_SHA
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "develop"'



Build and Deploy Linux:
  stage: deploy-lin
  script:
    - mvn -B package -Plinux_64bit,install4j $MAVEN_CLI_OPTS
    - echo "Baue AppImage"
    - scripte/appimage.sh release
    - /skripte/deploy.sh release linux
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Linux ARM:
  stage: deploy-linarm
  script:
    - mvn -B package -P!linux_64bit,linux_arm_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release linux-aarch64
  rules:
    - if: $CI_COMMIT_TAG

Build and Deploy Windows:
  stage: deploy-win
  script:
    - mvn -B package -P!linux_64bit,windows_64bit,install4j $MAVEN_CLI_OPTS
    - /skripte/deploy.sh release win
  rules:
    - if: $CI_COMMIT_TAG

# Build and Deploy Windows 32bit:
#   stage: deploy-win32
#   script:
#     - mvn -B package -P!linux_64bit,windows_32bit,install4j $MAVEN_CLI_OPTS
#     - /skripte/deploy.sh release win32
#   rules:
#     - if: $CI_COMMIT_TAG
